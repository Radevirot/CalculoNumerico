>> g1 = @(x) (3+x-2.*x.^2).^(1/4)
g1 =

@(x) (3 + x - 2 .* x .^ 2) .^ (1 / 4)

>> g2 = @(x) ((x+3-x.^4)./2).^(1/2)
g2 =

@(x) ((x + 3 - x .^ 4) ./ 2) .^ (1 / 2)

>> g3 = @(x) ((x+3)./(x.^2+2))^(1/2)
g3 =

@(x) ((x + 3) ./ (x .^ 2 + 2)) ^ (1 / 2)

>> g4 = @(x) (3.*x.^4+2.*x.^2+3)./(4.*x.^3+4.*x-1)
g4 =

@(x) (3 .* x .^ 4 + 2 .* x .^ 2 + 3) ./ (4 .* x .^ 3 + 4 .* x - 1)

>> [p1, i1, h1, time1] = puntofijo(g1,1,1e-5,100)
cortó por tolerancia
p1 = 1.1241
i1 = 22
h1 =

 Columns 1 through 9:

   1.8921e-01   1.0915e-01   6.9614e-02   4.1851e-02   2.6112e-02   1.5929e-02   9.8540e-03   6.0440e-03   3.7267e-03

 Columns 10 through 18:

   2.2904e-03   1.4105e-03   8.6758e-04   5.3403e-04   3.2856e-04   2.0221e-04   1.2442e-04   7.6568e-05   4.7116e-05

 Columns 19 through 22:

   2.8994e-05   1.7842e-05   1.0979e-05   6.7561e-06

time1 = 8.9693e-04
>> [p2, i2, h2, time2] = puntofijo(g2,1,1e-5,100)
cortó por iteraciones
p2 = 1.2611
i2 = 100
h2 =

 Columns 1 through 13:

   0.2247   0.2311   0.2349   0.2411   0.2447   0.2506   0.2540   0.2596   0.2627   0.2680   0.2709   0.2758   0.2784

 Columns 14 through 26:

   0.2828   0.2852   0.2892   0.2913   0.2950   0.2968   0.3000   0.3016   0.3045   0.3059   0.3084   0.3096   0.3118

 Columns 27 through 39:

   0.3128   0.3147   0.3155   0.3172   0.3179   0.3193   0.3199   0.3211   0.3216   0.3226   0.3231   0.3239   0.3243

 Columns 40 through 52:

   0.3250   0.3253   0.3259   0.3262   0.3267   0.3269   0.3273   0.3275   0.3279   0.3280   0.3283   0.3284   0.3287

 Columns 53 through 65:

   0.3288   0.3290   0.3291   0.3293   0.3293   0.3295   0.3295   0.3297   0.3297   0.3298   0.3299   0.3299   0.3300

 Columns 66 through 78:

   0.3300   0.3301   0.3301   0.3302   0.3302   0.3302   0.3303   0.3303   0.3303   0.3303   0.3304   0.3304   0.3304

 Columns 79 through 91:

   0.3304   0.3304   0.3304   0.3304   0.3304   0.3305   0.3305   0.3305   0.3305   0.3305   0.3305   0.3305   0.3305

 Columns 92 through 99:

   0.3305   0.3305   0.3305   0.3305   0.3305   0.3305   0.3305   0.3305

time2 = 1.7211e-03
>> [p2, i2, h2, time2] = puntofijo(g2,1,1e-5,1000);
cortó por iteraciones
>> [p2, i2, h2, time2] = puntofijo(g2,1,1e-5,10000);
cortó por iteraciones
>> [p2, i2, h2, time2] = puntofijo(g2,1,1e-5,100000);
cortó por iteraciones
>> [p3, i3, h3, time3] = puntofijo(g3,1,1e-5,100);
cortó por tolerancia
>> [p3, i3, h3, time3] = puntofijo(g3,1,1e-5,100)
cortó por tolerancia
p3 = 1.1241
i3 = 8
h3 =

   1.5470e-01   3.8273e-02   9.6248e-03   2.4133e-03   6.0561e-04   1.5194e-04   3.8124e-05   9.5653e-06

time3 = 4.2892e-04
>> [p4, i4, h4, time4] = puntofijo(g4,1,1e-5,100)
cortó por tolerancia
p4 = 1.1241
i4 = 4
h4 =

   1.4286e-01   1.8375e-02   3.5853e-04   1.3424e-07

time4 = 4.4584e-04
>> %Parecen converger todas excepto g2, se calculará su derivada y se graficará junto con la función f(x)=x, además d
e analizar sus valores en los extremos.
>> dg2 = @(x) (1-4.*x.^3)./(2.*sqrt(2).*(-x.^4+x+3).^(1/2))
dg2 =

@(x) (1 - 4 .* x .^ 3) ./ (2 .* sqrt (2) .* (-x .^ 4 + x + 3) .^ (1 / 2))

>> graphFunction(dg2,1,1.5,100,'o-')
>> graphFunction(dg2,1,1.5,100,'b-')
>> graphFunction(g2,1,1.5,100,'r-')
>> fx = @(x) x
fx =

@(x) x

>> graphFunction(x,1,1.5,100,'g-')
error: 'x' undefined near line 1, column 15
>> graphFunction(fx,1,1.5,100,'g-')
>> legend show
>> legend('dg2','g2','x')
>> %Podemos ver que no solo la derivada llega a valer menos de -20 en el intervalo sino que también pasa a valer 0 al
mismo tiempo que la función original, lo cuál no está contemplado para este método.
>> %La función con la que se obtuvo la convergencia más rápida fue g4, con un total de 4 iteraciones.